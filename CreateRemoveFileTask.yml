---
# ------------------------------------------------------------------------------------------------#
#   Create Remove file Schedule Task
#
# This will create encrypted password file for the remove 
# file Schedule Task
#
#   IMPORTANT - VARABLE + 'env' - needs to be passed: dev,test or prod 
#                       + 'storage_password' - is also require for central storage          
# -----------------------------------------------------------------------------------------------#
- name: Create encrypted file of password
  hosts: all
  gather_facts: false
  vars:
    kyndryl_folder: 'C:\Kyndryl\'                   # Temp location to run script from
    password_file: 'Credential.enc'                 # File to store encrypted password in
    script_name: 'CreateEncryptedFile.ps1'          # Powershell script to create encrypted file
    remove_script: 'RemoveFiles.ps1'                # Powershell script to create encrypted file
    storage_user: 'windowslogging'                  # Password string to convert
    target_Folder: ''                               # Password string to convert
    log_directory: ''                               # Password string to convert  
 
  tasks:
    # When Dev environment set destination folder   
    - name: Set Dev destination folder
      set_fact:
        dest_folder: '\\tdlbkpprod0201.melb.ad\wineventlogs_nonprod\Dev'
      run_once: yes
      when: env == 'dev'
    
    # When Test environment set destination folder   
    - name: Set Test destination folder
      set_fact:
        dest_folder: '\\tdlbkpprod0201.melb.ad\wineventlogs_nonprod\Test'
      run_once: yes
      when: env == 'test'

      # When Prod environment set destination folder   
    - name: Set Production destination folder
      set_fact:
        dest_folder: '\\tdlbkpprod0201.melb.ad\wineventlogs_prod'
      run_once: yes
      when: env == 'prod'

    # Check for the Temp folder to store scripts into exist
    - name: Kyndryl folder check
      win_stat:
        path: "{{ kyndryl_folder }}"
      register: folder_check

    # Create temp folder if it does not exist
    - name: Create directory structure if it does not exist
      win_file:
        path: "{{ kyndryl_folder }}"
        state: directory
      when: folder_check.stat.exists == false
        
    # Copy powershell script to temp folder on server
    - name: Copy file from playbook
      win_copy:
        src: "./{{ script_name }}"
        dest: "{{ kyndryl_folder }}{{ script_name }}"

    # Create a windows task schedule to create the encrypted file     
    - name: Create scheduled task to create encrypted file
      win_scheduled_task:
        name: "Create Encrypted File"
        description: "Scheduled task created by Ansible"
        actions:
        - path: powershell.exe
          arguments: >
            -File "{{ kyndryl_folder }}{{ script_name }}"
            -PassString "{{ storage_password }}"
            -SaveLocation "{{ kyndryl_folder }}{{ password_file }}" 
        state: present
        enabled: yes
        triggers:
        - type: registration
        frequency: once
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        logon_type: password
      no_log: True

    # Remove Powershell file 
    - name: Remove Powershell file
      win_file:
        path: "{{ kyndryl_folder }}{{ script_name }}"
        state: absent

    # Remove the Task schedule        
    - name: Remove scheduled task
      win_scheduled_task:
        name: "Create Encrypted File"
        state: absent
    
    # Copy Remove File Powershell script
    - name: Copy Powershell script 
      win_copy:
        src: "./{{ remove_script }}"
        dest: "{{ kyndryl_folder }}{{ remove_script }}"

    # Create a windows task schedule to create the encrypted file     
    - name: Create scheduled task to run remove file script
      win_scheduled_task:
        name: "Maintain archive event logs"
        description: "Scheduled task created by Ansible"
        allow_demand_start: true
        restart_count: 200
        restart_interval: PT1M
        run_level: highest
        start_when_available: true
        actions:
        - path: powershell.exe
          arguments: >
            -File ""{{ kyndryl_folder }}{{ remove_script }}"
            -Days "180"
            -Targetfolder "{{ target_Folder}}"
            -Extension "*.evtx"
            -LogDir "{{ log_folder }}"
            -StorageUser "{{ storage_user }}"
        state: present
        enabled: yes
        triggers:
        - type: daily
          start_boundary: "2023-07-13T02:01:00"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        logon_type: password
      no_log: True 